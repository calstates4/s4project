<?php
/**
 * @file
 * Code for the S4 Reporting feature.
 */

include_once('s4_reporting.features.inc');

function s4_reporting_menu() {
	$items = array();
	
	$items['node/%node/responses'] = array(
		'title' => 'Responses',
		'page callback' => 's4_reporting_object_report',
		'type' => MENU_LOCAL_TASK,
		'page arguments' => array(1),
		'access callback' => 's4_reporting_object_report_access',
		'access arguments' => array(1),
		'file' => 's4_reporting.pages.inc',
		'weight' => 10
	);
	
	$items['node/%node/responses/signup'] = array(
		'title' => 'Signup',
		'page callback' => 's4_reporting_object_report',
		'type' => MENU_LOCAL_TASK,
		'page arguments' => array(1, 'signup'),
		'access callback' => 's4_reporting_object_report_access',
		'access arguments' => array(1),
		'file' => 's4_reporting.pages.inc',
		'weight' => 10
	);
	
	$items['node/%node/responses/evaluation'] = array(
		'title' => 'Evaluations',
		'page callback' => 's4_reporting_object_report',
		'type' => MENU_LOCAL_TASK,
		'page arguments' => array(1, 'evaluation'),
		'access callback' => 's4_reporting_object_report_access',
		'access arguments' => array(1),
		'file' => 's4_reporting.pages.inc',
		'weight' => 10
	);
	
	$items['reports/view/%'] = array(
		'title' => 'Report',
		'page callback' => 's4_reporting_report_view',
		'page arguments' => array(2),
		'access arguments' => array('view s4 reports'),
		'file' => 's4_reporting.pages.inc',
	);
	
	return $items;
}

function s4_reporting_object_report_access($node) {
	return (in_array($node->type, array('site', 'course')) && node_access('update', $node));
}

function s4_reporting_block_info() {
	$blocks['site_summary'] = array('info' => 'Site summary');
	$blocks['course_summary'] = array('info' => 'Course summary');
	return $blocks;
}

function s4_reporting_block_view($delta) {
  module_load_include('inc', 's4_reporting', 's4_reporting.blocks');
  $function_name = 's4_reporting_block_' . $delta;
  if (function_exists($function_name)) {
    return $function_name();
  }
  return NULL;
}

/**
*	Implementation of hook_theme
*/
function s4_reporting_theme($existing, $type, $theme, $path) {
	return array(
		's4_reporting_chart_pie' => array(
			'variables' => array('data' => array(), 'width' => '', 'height' => '', 'label' => '', 'title' => '','id' => ''),
		),
	);
}

function theme_s4_reporting_chart_pie($data) {
	drupal_add_js('https://www.google.com/jsapi');
	$script = 'google.load("visualization", "1", {packages:["corechart"]});
      google.setOnLoadCallback(drawChart);
      function drawChart() {
        var data = new google.visualization.DataTable();
		%s
        var chart = new google.visualization.PieChart(document.getElementById("'. $data['id'] .'"));
        chart.draw(data, {pieSliceText : "label", legend : "none", tooltipText: "percentage",  width: '. $data['width'] .', height: '. $data['height'] .', title: "'. $data['title'] .'", chartArea : {height: '. $data['height'] .', width: '. $data['width'] .'}});
      }';
    $values = array();
	$values[] = 'data.addColumn("string", "'. $data['label'] .'");';
	$values[] = 'data.addColumn("number", "Values");';
	$values[] = 'data.addRows('. count($data['data']) .');';
	$i = 0;
	foreach($data['data'] as $type => $value) {
		if($value) {
			$values[] = 'data.setValue('. $i .',0,"'. $type .'");';
			$values[] = 'data.setValue('. $i .',1,'. $value .');';
			$i++;
		}
	}
	if(count($values) == 3) {
		return null;
	}
	drupal_add_js(sprintf($script, implode("\n", $values)), 'inline');
	return '<div class="chart-pie" id="'. $data['id'] .'"></div>';
}

function s4_reporting_action_info() {
  return array(
    's4_reporting_run_summary_report' => array(
        'type' => 'node',
        'label' => t('Run summary report'),
        'configurable' => TRUE,
        'triggers' => array('any'),
      ),
    's4_reporting_run_full_report' => array(
        'type' => 'node',
        'label' => t('Run full report'),
        'configurable' => TRUE,
        'triggers' => array('any'),
      ),
  );
}

function s4_reporting_run_summary_report($entity, $context) {
	dpm($entity);
	dpm($context);
	return;
}

function _s4_reporting_action_settings_form($context) {
	drupal_add_js(drupal_get_path('module', 's4_reporting') .'/js/s4_reporting.js');
	$sample = node_load(array_pop(array_keys($context['selection'])));
	$fields = field_info_instances('node', $sample->type);
	$options = array('all' => 'Select all');
	foreach($fields as $name => $field) {
		$options[$name] = $field['label'];
	}
	
	$form['fields'] = array(
		'#type' => 'checkboxes',
		'#title' => 'What fields do you want to select?',
		'#options' => $options,
		'#attributes' => array('class' => array('s4-reporting-fields')),
	);
	return $form;
}

function s4_reporting_run_summary_report_form($context) {
	return _s4_reporting_action_settings_form($context);
}

function s4_reporting_run_summary_report_validate($form, $form_state) {

}

function s4_reporting_run_summary_report_submit($form, $form_state) {
  return array(
    'fields' => $form_state['values']['fields'],
  );
}

function s4_reporting_run_full_report($entity, $context) {
	dpm($entity);
	dpm($context);
	return;
}

function s4_reporting_run_full_report_form($context) {
	return _s4_reporting_action_settings_form($context);
}

function s4_reporting_run_full_report_validate($form, $form_state) {

}

function s4_reporting_run_full_report_submit($form, $form_state) {
  return array(
    'fields' => $form_state['values']['fields'],
  );
}

function s4_reporting_permissions() {
	return array('view s4 reports' => array(
					'title' => 'View generated reports',
					'description' => 'User can access pre-generated reports',
				)
		);
}