<?php

/**
*  Block helper for rendering a given webform submission
*/
function s4_webform_render_submission($field, $entity = FALSE, $entity_type = 'node') {
  if (!$entity) {
  	$entity = menu_get_object();
  }
  $sid = field_get_items($entity_type, $entity, $field);
  $output = '';
  if (!$sid || !count($sid)) {
  	return FALSE;
  }
  foreach($sid as $submission) {
	  $query = db_select('webform_submissions', 'w')->fields('w', array('nid'))->condition('sid', $submission['value']);
	  $results = $query->execute();
	  $form = node_load($results->fetchField());
	  $output = '';
	  global $user;
	  if (count($form)) {
	    module_load_include('inc', 'webform', 'includes/webform.submissions');
	    $submission = webform_get_submission($form->nid, $sid[0]['value']);
	      if (!$submission) {
	        return NULL;
	      }
	      $output .= webform_submission_render($form, $submission, NULL, 'html');
	  }
	}
  return array('content' => $output);
}

/**
*	Implementation of hook_menu_alter
*/
function s4_webform_menu_alter(&$items) {
	$items['node/%webform_menu/webform']['title'] = 'Edit form';
	$items['node/%webform_menu/webform/components']['title'] = 'Edit questions';
	$items['node/%webform_menu/webform/components/%webform_menu_component']['title'] = 'Edit/Add question';
	$items['node/%webform_menu/webform-results']['access callback'] = 's4_webform_hide_results';
	$items['node/%webform_menu/webform-results/analysis']['access callback'] = 's4_webform_hide_results';
	$items['node/%webform_menu/webform-results/table']['access callback'] = 's4_webform_hide_results';
	$items['node/%webform_menu/webform-results/download']['access callback'] = 's4_webform_hide_results';
	$items['node/%webform_menu/webform-results/clear']['access callback'] = 's4_webform_hide_results';
	$items['node/%webform_menu/webform/emails']['access callback'] = 's4_webform_hide_results';
	$items['node/%webform_menu/webform/configure']['access callback'] = 's4_webform_hide_results';
}

function s4_webform_hide_results() {
	return user_access('override default field settings');
}

/**
*	Alter the name of the question options to be more user-friendly
*/
function s4_webform_form_webform_components_form_alter(&$form, $form_state) {
	$form['add']['type']['#options']['markup'] = 'Additional directions';
	$form['add']['type']['#options']['fieldset'] = 'Collection of questions';
	$form['add']['type']['#options']['textfield'] = 'Single-line text';
	$form['add']['type']['#options']['textarea'] = 'Paragraph text';
	$form['add']['type']['#options']['select'] = 'Drop-down list';
	unset($form['add']['type']['#options']['hidden']);	
}

/**
*	Altering the add-component form to make it more user-friendly
*/
function s4_webform_form_webform_component_edit_form_alter(&$form, $form_state) {
	$form['form_key']['#title'] = t('Short computer name');
	$form['form_key']['#description'] = t('Enter a computer-readable version of this question. This can only contain letters, numbers, and underscores (_).');
	if (isset($form['display']['title_display'])) {
		$form['display']['title_display']['#title'] = t('Hide the question text');
		$form['display']['title_display']['#description'] = t('Do not display the question over this field.');
	}	
	if (isset($form['display']['aslist'])) {
		$form['display']['aslist']['#description'] = t('Check this box if you want this question\'s options to be a drop-down menu instead of a list of check boxes or radio buttons.');
	}
	if (isset($form['extra']['savelocation']) && !$form['cid']['#value']) {
		$form['extra']['savelocation']['#default_value'] = 'form-files';
	}
	$form['submit']['#value'] = 'Save question';
}

function s4_webform_s4_help($path) {
	module_load_include('inc', 's4_webform', 's4_webform.help');
	return _s4_webform_help($path);
}