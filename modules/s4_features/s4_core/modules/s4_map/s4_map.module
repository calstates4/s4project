<?php
/**
 * @file
 * Code for the S4 Map feature.
 */

include_once('s4_map.features.inc');

function s4_map_views_query_alter(&$view, &$query) {
  if ($view->name == 'site_map'){
    $query->where[0]['conditions'][] = array('field' => 'location.latitude',
    									    'value' => floatval($_GET['lat_min']),
    									    'operator' => '>=');
    $query->where[0]['conditions'][] = array('field' => 'location.latitude',
    									    'value' => floatval($_GET['lat_max']),
    									    'operator' => '<=');
    $query->where[0]['conditions'][] = array('field' => 'location.longitude',
    									    'value' => floatval($_GET['lon_min']),
    									    'operator' => '>=');									    
    $query->where[0]['conditions'][] = array('field' => 'location.longitude',
    									    'value' => floatval($_GET['lon_max']),
    									    'operator' => '<=');
  }
}

function s4_map_menu() {
  $items = array();
  
  $items['admin/config/s4/counties'] = array(
    'title' => 'Update county information',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('s4_map_admin_rebuild_counties'),
    'access arguments' => array('administer site configuration'),
    'file' => 's4_map.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  
  return $items;
}

/**
* Implements hook_s4_site_configuration
*/
function s4_map_s4_site_configuration() {
	return array(
		's4_map' => array(
			'group' => t('Appearance'),
			'title' => t('Map settings'),
			'description' => t('Set the default center and zoom level of your site map.'),
			'href' => 'admin/config/services/gmap',
		),
	);
}

function s4_map_block_info() {
	$blocks['s4_map_site_map'] = array('info' => 'General site map');
	$blocks['s4_map_site_list_map'] = array('info' => 'Site list map');
	$blocks['s4_map_site_view_map'] = array('info' => 'Site view map');

	return $blocks;
}

function s4_map_node_presave($node) {
  s4_map_assign_county($node);
}

function s4_map_assign_county($node, $rebuild = FALSE) {
  $location = field_get_items('node', $node, 'field_location');
  $location = $location[0];
  $county = field_get_items('node', $node, 'field_county');
  if((!$location['city'] || $county[0]['value']) && !$rebuild) {
    return;
  }
  $address = urlencode(check_plain($location['street'] .',+'. $location['city'] .',+'. $location['province'] .'+'. $location['postal_code']));
  $geocode = drupal_http_request('http://maps.googleapis.com/maps/api/geocode/json?sensor=false&address='. $address, array('timeout' => 7));
  if($geocode->code == 200) {
    $geo = json_decode($geocode->data);

    foreach($geo->results as $result) {
      foreach($result->address_components as $component) {
        if(in_array('administrative_area_level_2', $component->types)) {
          $node->field_county[LANGUAGE_NONE][0]['value'] = $component->long_name;
          $node->field_county[$node->language][0]['value'] = $component->long_name;
        }
      }
    }
  }
}

function s4_map_block_view($delta) {
	$default = variable_get('gmap_default', array());
	$lat_lon = explode(',', $default['latlong']);
	drupal_add_js(array('s4_map' => array('lat' => $lat_lon[0], 'lon' => $lat_lon[1], 'zoom' => intval($default['zoom']))), 'setting');
	drupal_add_js('https://maps.google.com/maps/api/js?libraries=geometry&sensor=false');
	drupal_add_js(drupal_get_path('module', 's4_map') . '/js/s4_map.js');
	drupal_add_js(array('s4_map_path' => drupal_get_path('module', 's4_map')), 'setting');
	if($program = variable_get('s4_pages_program_homepage', FALSE)) {
  	drupal_add_js(array('s4_map_program' => $program), 'setting');
	}
	drupal_add_css(drupal_get_path('module', 's4_map') . '/css/s4_map.css');
	
	switch($delta) {
		case 's4_map_site_map':
			return array('subject' => null,
						 'content' => '<div id="map-loading-indicator">Loading</div><div class="map autofill" id="site-map"></div>',
						 );
			break;
		case 's4_map_site_list_map':
			return array('subject' => null,
						 'content' => '<div class="map" id="site-list-map"></div>',
						 );
			break;
		case 's4_map_site_view_map':
		  $node = menu_get_object();
		  $locations = field_get_items('node', $node, 'field_location');
		  if(!$locations || !count($locations)) {
  		  return;
		  }
		  $coordinates = array();
		  foreach($locations as $location) {
		    $address = array($location['name'],
                                                    $location['street'],
                                                    $location['additional'],
                                                    $location['city'] .', '. $location['province'] .' &nbsp;'. $location['postal_code']);
        foreach($address as $k => $a) {
          if(!$a) {
            unset($address[$k]);
          }
        }
        $address[] = l(t('Directions'), 'http://maps.google.com/?q='. implode(',', $address), array('attributes' => array('target' => '_blank')));
  		  $coordinates[] = array('name' => implode('<br/>', $address),
  		                         'lat' => $location['latitude'],
  		                         'lon' => $location['longitude']);
		  }
		  drupal_add_js(array('s4_map_site_coordinates' => $coordinates), 'setting');
		  return array('subject' => null,
		         'content' => '<div class="map site-view" id="site-view-map"></div>',
		         );
	}
}