<?php
/**
 * @file
 * Code for the S4 Sites feature.
 */

include_once('s4_sites.features.inc');

/**
*  Implementation of hook_menu_alter()
*/

function s4_sites_menu_alter(&$items) {
  $items['node/%/contact-records']['access callback'] = '_s4_sites_site_admin_view_access';
  $items['node/%/contact-records']['access arguments'] = array(1);
}

/**
*  Menu access test for site contact records
*/
function _s4_sites_site_admin_view_access($nid) {
  $node = node_load($nid);
  return (node_access('update', $node) && $node->type == 'site');
}

/**
*  Implementation of hook_init
*/
function s4_sites_init() {
  drupal_add_js(drupal_get_path('module', 's4_sites') . '/js/s4_map.js');
}

/**
*  Implementation of hook_block_info()
*/
function s4_sites_block_info() {
  $blocks['s4_sites_search_help'] = array('info' => 'Site list help');
  $blocks['s4_sites_search_map'] = array('info' => 'Site list map');
  return $blocks;
}

/**
*  Implementation of hook_block_view
*/
function s4_sites_block_view($delta) {
  switch ($delta) {
    case 's4_sites_search_help':
      return array('subject' => '',
             'content' => t('<p>Use this search form to find a site that meets your specific needs. Clicking on the <strong>Map link</strong> will show the location of that site on the map to the right.</p>'));
      break;
    case 's4_sites_search_map':
      if (!module_exists('gmap')) {
        return NULL;
      }
      $map = array(
         '#type' => 'gmap',
         '#gmap_settings' => array(
          'zoom' => 10,
          'width' => '100%',
          'height' => '300px',
          'id' => 'site-map',
          'maptype' => 'world-light',
          'controltype' => 'Small'
        ),
      );
      return array('subject' => '',
             'content' => drupal_render($map) . t('<h4>!link</h4>', array('!link' => l('View large map', 'map'))));
      break;
  }
  
}

/**
* Implementation of hook_form_FORM_ID_alter
* Here we're adding links to descriptions as links can't be rendered right
* stright from the admin settings.
*/
function s4_sites_form_site_node_form_alter(&$form, $form_state, $form_id) {
  $terms = taxonomy_get_vocabularies();
  foreach($terms as $k => $term) {
    unset($terms[$k]);
    $terms[$term->machine_name] = $term;
  }
  $fields = array('field_site_restrict',
                 'field_csu_facility',
                 'field_csu_org_type',
  );
  foreach($fields as $field_name) {
    $field = field_info_field($field_name);
    $term = $terms[$field['settings']['allowed_values'][0]['vocabulary']];
    dpm($term);
    if(user_access('edit terms in ' . $term->vid)) {
      $form[$field_name][$form['#node']->language]['#description'] .=
        l('Add new values to this list.', 'admin/structure/taxonomy/' . $term->machine_name, array('attributes' => array('target' => '_blank')));
    }
    
  }
}